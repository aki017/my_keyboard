type KeyCodeInfo = {
  label: string,
  info: string
}

export const keyCodeAlpha = {
  KC_A: { label: "A", info: "a and A"},
  KC_B: { label: "B", info: "b and B"},
  KC_C: { label: "C", info: "c and C"},
  KC_D: { label: "D", info: "d and D"},
  KC_E: { label: "E", info: "e and E"},
  KC_F: { label: "F", info: "f and F"},
  KC_G: { label: "G", info: "g and G"},
  KC_H: { label: "H", info: "h and H"},
  KC_I: { label: "I", info: "i and I"},
  KC_J: { label: "J", info: "j and J"},
  KC_K: { label: "K", info: "k and K"},
  KC_L: { label: "L", info: "l and L"},
  KC_M: { label: "M", info: "m and M"},
  KC_N: { label: "N", info: "n and N"},
  KC_O: { label: "O", info: "o and O"},
  KC_P: { label: "P", info: "p and P"},
  KC_Q: { label: "Q", info: "q and Q"},
  KC_R: { label: "R", info: "r and R"},
  KC_S: { label: "S", info: "s and S"},
  KC_T: { label: "T", info: "t and T"},
  KC_U: { label: "U", info: "u and U"},
  KC_V: { label: "V", info: "v and V"},
  KC_W: { label: "W", info: "w and W"},
  KC_X: { label: "X", info: "x and X"},
  KC_Y: { label: "Y", info: "y and Y"},
  KC_Z: { label: "Z", info: "z and Z"},
} as const;
export const keyCodeNumber = {
  KC_1: { label: "1", info: "1 and !"},
  KC_2: { label: "2", info: "2 and @"},
  KC_3: { label: "3", info: "3 and #"},
  KC_4: { label: "4", info: "4 and $"},
  KC_5: { label: "5", info: "5 and %"},
  KC_6: { label: "6", info: "6 and ^"},
  KC_7: { label: "7", info: "7 and &"},
  KC_8: { label: "8", info: "8 and *"},
  KC_9: { label: "9", info: "9 and ("},
  KC_0: { label: "0", info: "0 and )"},
} as const;
export const keyCodeFunction = {
  KC_F1: { label: "F1", info: "F1"},
  KC_F2: { label: "F2", info: "F2"},
  KC_F3: { label: "F3", info: "F3"},
  KC_F4: { label: "F4", info: "F4"},
  KC_F5: { label: "F5", info: "F5"},
  KC_F6: { label: "F6", info: "F6"},
  KC_F7: { label: "F7", info: "F7"},
  KC_F8: { label: "F8", info: "F8"},
  KC_F9: { label: "F9", info: "F9"},
  KC_F10: { label: "F10", info: "F10"},
  KC_F11: { label: "F11", info: "F11"},
  KC_F12: { label: "F12", info: "F12"},
  KC_F13: { label: "F13", info: "F13"},
  KC_F14: { label: "F14", info: "F14"},
  KC_F15: { label: "F15", info: "F15"},
  KC_F16: { label: "F16", info: "F16"},
  KC_F17: { label: "F17", info: "F17"},
  KC_F18: { label: "F18", info: "F18"},
  KC_F19: { label: "F19", info: "F19"},
  KC_F20: { label: "F20", info: "F20"},
  KC_F21: { label: "F21", info: "F21"},
  KC_F22: { label: "F22", info: "F22"},
  KC_F23: { label: "F23", info: "F23"},
  KC_F24: { label: "F24", info: "F24"},
};
export const keyCodePunctuation = {
  KC_ENTER: { label: "Enter", info: "Return (Enter)"},
  KC_ESCAPE: { label: "Esc", info: "Escape "},
  KC_BSPACE: { label: "BS", info: "Delete (Backspace) "},
  KC_TAB: { label: "TAB", info: "Tab"},
  KC_SPACE: { label: "Space", info: "Spacebar"},
  KC_MINUS: { label: "-", info: "- and _"},
  KC_EQUAL: { label: "=", info: "= and +"},
  KC_LBRACKET: { label: "[", info: "[ and {"},
  KC_RBRACKET: { label: "]", info: "] and }"},
  KC_BSLASH: { label: "\\", info: "\\ and |"},
  KC_NONUS_HASH: { label: "~", info: "Non-US # and ~"},
  KC_SCOLON: { label: ";", info: "; and :"},
  KC_QUOTE: { label: "'", info: "' and \""},
  KC_GRAVE: { label: "`", info: "&#96; and ~, JIS Zenkaku/Hankaku"},
  KC_COMMA: { label: ",", info: ", and <"},
  KC_DOT: { label: ".", info: ". and >"},
  KC_SLASH: { label: "/", info: "/ and ?"},
  KC_NONUS_BSLASH: { label: "\\", info: "Non-US \\ and \\"},
} as const;

export const keyCodeLock = {
  KC_CAPSLOCK: { label: "Caps Lock", info: "Caps Lock"},
  KC_SCROLLLOCK: { label: "Scroll Lock", info: "Scroll Lock, Brightness Down (macOS)"},
  KC_NUMLOCK: { label: "Num Lock", info: "Keypad Num Lock and Clear"},
  KC_LOCKING_CAPS: { label: "Locking Caps Lock", info: "Locking Caps Lock"},
  KC_LOCKING_NUM: { label: "Locking Num Lock", info: "Locking Num Lock"},
  KC_LOCKING_SCROLL: { label: "Locking Scroll Lock", info: "Locking Scroll Lock"},
};

export const keyCodeModifier = {
  KC_LCTRL: { label: "Control", info: "Left Control"},
  KC_LSHIFT: { label: "Shift", info: "Left Shift"},
  KC_LALT: { label: "Alt", info: "Left Alt (Option)"},
  KC_LGUI: { label: "GUI", info: "Left GUI (Windows/Command/Meta key)"},
  KC_RCTRL: { label: "Control", info: "Right Control"},
  KC_RSHIFT: { label: "Shift", info: "Right Shift"},
  KC_RALT: { label: "Alt", info: "Right Alt (Option/AltGr)"},
  KC_RGUI: { label: "GUI", info: "Right GUI (Windows/Command/Meta key)"},
};

export const keyCodeInternational = {
  KC_INT1: { label: "", info: "JIS  and _"},
  KC_INT2: { label: "", info: "JIS Katakana/Hiragana"},
  KC_INT3: { label: "", info: "`"},
  KC_INT4: { label: "", info: "JIS Henkan"},
  KC_INT5: { label: "", info: "JIS Muhenkan"},
  KC_INT6: { label: "", info: "JIS Numpad ,"},
  KC_INT7: { label: "", info: "International 7"},
  KC_INT8: { label: "", info: "International 8"},
  KC_INT9: { label: "", info: "International 9"},
  KC_LANG1: { label: "", info: "Hangul/English"},
  KC_LANG2: { label: "", info: "Hanja"},
  KC_LANG3: { label: "", info: "JIS Katakana"},
  KC_LANG4: { label: "", info: "JIS Hiragana"},
  KC_LANG5: { label: "", info: "JIS Zenkaku/Hankaku"},
  KC_LANG6: { label: "", info: "Language 6"},
  KC_LANG7: { label: "", info: "Language 7"},
  KC_LANG8: { label: "", info: "Language 8"},
  KC_LANG9: { label: "", info: "Language 9"},
};

export const keyCodeCommand = {
  KC_PSCREEN: { label: "", info: "Print Screen"},
  KC_PAUSE: { label: "", info: "Pause, Brightness Up (macOS)"},
  KC_INSERT: { label: "", info: "Insert"},
  KC_HOME: { label: "", info: "Home"},
  KC_PGUP: { label: "", info: "Page Up"},
  KC_DELETE: { label: "Delete", info: "Forward Delete"},
  KC_END: { label: "", info: "End"},
  KC_PGDOWN: { label: "Page Down", info: "Page Down"},
  KC_RIGHT: { label: "", info: "Right Arrow"},
  KC_LEFT: { label: "", info: "Left Arrow"},
  KC_DOWN: { label: "", info: "Down Arrow"},
  KC_UP: { label: "", info: "Up Arrow"},
  KC_APPLICATION: { label: "", info: "Application (Windows Menu Key)"},
  KC_POWER: { label: "", info: "System Power (macOS/Linux)"},
  KC_EXECUTE: { label: "", info: "Execute"},
  KC_HELP: { label: "", info: "Help"},
  KC_MENU: { label: "", info: "Menu"},
  KC_SELECT: { label: "", info: "Select"},
  KC_STOP: { label: "", info: "Stop"},
  KC_AGAIN: { label: "", info: "Again"},
  KC_UNDO: { label: "", info: "Undo"},
  KC_CUT: { label: "", info: "Cut"},
  KC_COPY: { label: "", info: "Copy"},
  KC_PASTE: { label: "", info: "Paste"},
  KC_FIND: { label: "", info: "Find"},
  KC__MUTE: { label: "", info: "Mute (macOS)"},
  KC__VOLUP: { label: "", info: "Volume Up (macOS)"},
  KC__VOLDOWN: { label: "", info: "Volume Down (macOS)"},
  KC_ALT_ERASE: { label: "", info: "Alternate Erase"},
  KC_SYSREQ: { label: "", info: "SysReq/Attention"},
  KC_CANCEL: { label: "", info: "Cancel"},
  KC_CLEAR: { label: "", info: "Clear"},
  KC_PRIOR: { label: "", info: "Prior"},
  KC_RETURN: { label: "", info: "Return"},
  KC_SEPARATOR: { label: "", info: "Separator"},
  KC_OUT: { label: "", info: "Out"},
  KC_OPER: { label: "", info: "Oper"},
  KC_CLEAR_AGAIN: { label: "", info: "Clear/Again"},
  KC_CRSEL: { label: "", info: "CrSel/Props"},
  KC_EXSEL: { label: "", info: "ExSel"},
};

export const keyCodeMedia = {
  KC_SYSTEM_POWER: { label: "", info: "System Power Down"},
  KC_SYSTEM_SLEEP: { label: "", info: "System Sleep"},
  KC_SYSTEM_WAKE: { label: "", info: "System Wake"},
  KC_AUDIO_MUTE: { label: "", info: "Mute"},
  KC_AUDIO_VOL_UP: { label: "", info: "Volume Up"},
  KC_AUDIO_VOL_DOWN: { label: "", info: "Volume Down"},
  KC_MEDIA_NEXT_TRACK: { label: "", info: "Next Track"},
  KC_MEDIA_PREV_TRACK: { label: "", info: "Previous Track"},
  KC_MEDIA_STOP: { label: "", info: "Stop Track (Windows)"},
  KC_MEDIA_PLAY_PAUSE: { label: "", info: "Play/Pause Track"},
  KC_MEDIA_SELECT: { label: "", info: "Launch Media Player (Windows)"},
  KC_MEDIA_EJECT: { label: "", info: "Eject (macOS)"},
  KC_MAIL: { label: "", info: "Launch Mail (Windows)"},
  KC_CALCULATOR: { label: "", info: "Launch Calculator (Windows)"},
  KC_MY_COMPUTER: { label: "", info: "Launch My Computer (Windows)"},
  KC_WWW_SEARCH: { label: "", info: "Browser Search (Windows)"},
  KC_WWW_HOME: { label: "", info: "Browser Home (Windows)"},
  KC_WWW_BACK: { label: "", info: "Browser Back (Windows)"},
  KC_WWW_FORWARD: { label: "", info: "Browser Forward (Windows)"},
  KC_WWW_STOP: { label: "", info: "Browser Stop (Windows)"},
  KC_WWW_REFRESH: { label: "", info: "Browser Refresh (Windows)"},
  KC_WWW_FAVORITES: { label: "", info: "Browser Favorites (Windows)"},
  KC_MEDIA_FAST_FORWARD: { label: "", info: "Next Track (macOS)"},
  KC_MEDIA_REWIND: { label: "", info: "Previous Track (macOS)"},
  KC_BRIGHTNESS_UP: { label: "", info: "Brightness Up"},
  KC_BRIGHTNESS_DOWN: { label: "", info: "Brightness Down"},
};

export const keyCodeNumPad = {
  KC_KP_SLASH: { label: "/", info: "Keypad /"},
  KC_KP_ASTERISK: { label: "*", info: "Keypad *"},
  KC_KP_MINUS: { label: "-", info: "Keypad -"},
  KC_KP_PLUS: { label: "+", info: "Keypad +"},
  KC_KP_ENTER: { label: "Enter", info: "Keypad Enter"},
  KC_KP_1: { label: "1", info: "Keypad 1 and End"},
  KC_KP_2: { label: "2", info: "Keypad 2 and Down Arrow"},
  KC_KP_3: { label: "3", info: "Keypad 3 and Page Down"},
  KC_KP_4: { label: "4", info: "Keypad 4 and Left Arrow"},
  KC_KP_5: { label: "5", info: "Keypad 5"},
  KC_KP_6: { label: "6", info: "Keypad 6 and Right Arrow"},
  KC_KP_7: { label: "7", info: "Keypad 7 and Home"},
  KC_KP_8: { label: "8", info: "Keypad 8 and Up Arrow"},
  KC_KP_9: { label: "9", info: "Keypad 9 and Page Up"},
  KC_KP_0: { label: "0", info: "Keypad 0 and Insert"},
  KC_KP_DOT: { label: ".", info: "Keypad . and Delete"},
  KC_KP_EQUAL: { label: "=", info: "Keypad ="},
  KC_KP_COMMA: { label: ",", info: "Keypad ,"},
  KC_KP_EQUAL_AS400: { label: "=", info: "Keypad = on AS/400 keyboards"},
};

export const keyCodeOther = {
  KC_NO: { label: "", info: "Ignore this key (NOOP)"},
  KC_TRANSPARENT: { label: "", info: "Use the next lowest non-transparent key"},
};

export const keyCode = {
  ...keyCodeAlpha,
  ...keyCodeNumber,
  ...keyCodeFunction,
  ...keyCodePunctuation,
  ...keyCodeLock,
  ...keyCodeModifier,
  ...keyCodeInternational,
  ...keyCodeCommand,
  ...keyCodeMedia,
  ...keyCodeNumPad,
  ...keyCodeOther,
} as const;
export type KeyCode = keyof typeof keyCode;
